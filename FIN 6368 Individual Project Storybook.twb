<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.24.0112.1233                               -->
<workbook original-version='18.1' source-build='2023.3.2 (20233.24.0112.1233)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='social media_vs_survey' inline='true' name='federated.116dbzh07idaaw1ekuqy0134lsk6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='social media_vs_survey' name='excel-direct.18bq6z81x2ceye18dbedr0mzzu55'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevin/OneDrive/Documents/FIN 6368.001/FIN 6368.001 Individual Project Final/social media_vs_survey.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18bq6z81x2ceye18dbedr0mzzu55' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C49:no:A1:C49:0' header='yes' lost='0' outcome='2' processed='96'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Social Media Scores' ordinal='1' />
            <column datatype='real' name='Survey Scores' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.18bq6z81x2ceye18dbedr0mzzu55' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C49:no:A1:C49:0' header='yes' lost='0' outcome='2' processed='96'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Social Media Scores' ordinal='1' />
            <column datatype='real' name='Survey Scores' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C49:no:A1:C49:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89DF9BABCB014D128E8C57557F516246]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social Media Scores</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social Media Scores]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Social Media Scores</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89DF9BABCB014D128E8C57557F516246]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Survey Scores</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Survey Scores]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Survey Scores</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89DF9BABCB014D128E8C57557F516246]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Date' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column datatype='real' name='[Social Media Scores]' role='measure' type='quantitative' />
      <column datatype='real' name='[Survey Scores]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_89DF9BABCB014D128E8C57557F516246]' role='measure' type='quantitative' />
      <column-instance column='[Social Media Scores]' derivation='Sum' name='[sum:Social Media Scores:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Survey Scores]' derivation='Sum' name='[sum:Survey Scores:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.116dbzh07idaaw1ekuqy0134lsk6].[sum:Survey Scores:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.116dbzh07idaaw1ekuqy0134lsk6].[sum:Social Media Scores:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_89DF9BABCB014D128E8C57557F516246'>
            <properties context=''>
              <relation connection='excel-direct.18bq6z81x2ceye18dbedr0mzzu55' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C49:no:A1:C49:0' header='yes' lost='0' outcome='2' processed='96'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Social Media Scores' ordinal='1' />
                  <column datatype='real' name='Survey Scores' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (predictions)' inline='true' name='federated.06ypuj209ru7nx1gmuywm1foem0c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='predictions' name='excel-direct.1rb4jy515k7lov1e6l5by08vyk6e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevin/OneDrive/Documents/FIN 6368.001/FIN 6368.001 Individual Project Final/predictions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1rb4jy515k7lov1e6l5by08vyk6e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E996:no:A1:E996:0' header='yes' outcome='6'>
            <column datatype='string' name='Stock' ordinal='0' />
            <column datatype='real' name='S' ordinal='1' />
            <column datatype='real' name='FF' ordinal='2' />
            <column datatype='real' name='FFS' ordinal='3' />
            <column datatype='real' name='Actual' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1rb4jy515k7lov1e6l5by08vyk6e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E996:no:A1:E996:0' header='yes' outcome='6'>
            <column datatype='string' name='Stock' ordinal='0' />
            <column datatype='real' name='S' ordinal='1' />
            <column datatype='real' name='FF' ordinal='2' />
            <column datatype='real' name='FFS' ordinal='3' />
            <column datatype='real' name='Actual' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E996:no:A1:E996:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Stock]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Stock</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_12BB4737B3104F9398C39159F761DAF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>S</remote-name>
            <remote-type>5</remote-type>
            <local-name>[S]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>S</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_12BB4737B3104F9398C39159F761DAF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FF]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_12BB4737B3104F9398C39159F761DAF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FFS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FFS]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FFS</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_12BB4737B3104F9398C39159F761DAF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Actual</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_12BB4737B3104F9398C39159F761DAF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_12BB4737B3104F9398C39159F761DAF7]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_12BB4737B3104F9398C39159F761DAF7'>
            <properties context=''>
              <relation connection='excel-direct.1rb4jy515k7lov1e6l5by08vyk6e' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E996:no:A1:E996:0' header='yes' outcome='6'>
                  <column datatype='string' name='Stock' ordinal='0' />
                  <column datatype='real' name='S' ordinal='1' />
                  <column datatype='real' name='FF' ordinal='2' />
                  <column datatype='real' name='FFS' ordinal='3' />
                  <column datatype='real' name='Actual' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (top100_posts)' inline='true' name='federated.1wrpk9s1t052ka1asjp4u1od9afw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='top100_posts' name='excel-direct.12xxrgo0fuun2r1g9mahm0335nve'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevin/OneDrive/Documents/FIN 6368.001/FIN 6368.001 Individual Project Final/top100_posts.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12xxrgo0fuun2r1g9mahm0335nve' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='ticker' ordinal='0' />
            <column datatype='datetime' name='date' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='real' name='scores' ordinal='3' />
            <column datatype='string' name='url' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.12xxrgo0fuun2r1g9mahm0335nve' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='ticker' ordinal='0' />
            <column datatype='datetime' name='date' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='real' name='scores' ordinal='3' />
            <column datatype='string' name='url' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ticker</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ticker]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ticker</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F2C26D91439749489E0EB876DA62397D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F2C26D91439749489E0EB876DA62397D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F2C26D91439749489E0EB876DA62397D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scores</remote-name>
            <remote-type>5</remote-type>
            <local-name>[scores]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>scores</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F2C26D91439749489E0EB876DA62397D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F2C26D91439749489E0EB876DA62397D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Reddit Posts and Scores' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F2C26D91439749489E0EB876DA62397D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Scores' datatype='real' name='[scores]' role='measure' type='quantitative' />
      <column caption='Ticker' datatype='string' name='[ticker]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Reddit Posts and Scores' id='Sheet1_F2C26D91439749489E0EB876DA62397D'>
            <properties context=''>
              <relation connection='excel-direct.12xxrgo0fuun2r1g9mahm0335nve' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='ticker' ordinal='0' />
                  <column datatype='datetime' name='date' ordinal='1' />
                  <column datatype='string' name='title' ordinal='2' />
                  <column datatype='real' name='scores' ordinal='3' />
                  <column datatype='string' name='url' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (sumstats_scores)' inline='true' name='federated.1pj47ap0t7zj7g19rirg5064mhma' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sumstats_scores' name='excel-direct.02xqn020z5xan818q0joy0f24a8j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevin/OneDrive/Documents/FIN 6368.001/FIN 6368.001 Individual Project Final/sumstats_scores.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.02xqn020z5xan818q0joy0f24a8j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C11:no:A1:C11:0' header='yes' outcome='2'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Social Media Scores' ordinal='1' />
            <column datatype='real' name='Survey Scores' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.02xqn020z5xan818q0joy0f24a8j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C11:no:A1:C11:0' header='yes' outcome='2'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Social Media Scores' ordinal='1' />
            <column datatype='real' name='Survey Scores' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C11:no:A1:C11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB19DBD44548472AA6F9EFC3F85737BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social Media Scores</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social Media Scores]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Social Media Scores</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB19DBD44548472AA6F9EFC3F85737BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Survey Scores</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Survey Scores]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Survey Scores</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BB19DBD44548472AA6F9EFC3F85737BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BB19DBD44548472AA6F9EFC3F85737BB]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BB19DBD44548472AA6F9EFC3F85737BB'>
            <properties context=''>
              <relation connection='excel-direct.02xqn020z5xan818q0joy0f24a8j' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C11:no:A1:C11:0' header='yes' outcome='2'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='Social Media Scores' ordinal='1' />
                  <column datatype='real' name='Survey Scores' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average Score by Stock'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (top100_posts)' name='federated.1wrpk9s1t052ka1asjp4u1od9afw' />
          </datasources>
          <datasource-dependencies datasource='federated.1wrpk9s1t052ka1asjp4u1od9afw'>
            <column-instance column='[scores]' derivation='Avg' name='[avg:scores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ticker]' derivation='None' name='[none:ticker:nk]' pivot='key' type='nominal' />
            <column caption='Scores' datatype='real' name='[scores]' role='measure' type='quantitative' />
            <column-instance column='[scores]' derivation='Sum' name='[sum:scores:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker' datatype='string' name='[ticker]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ticker:nk]' />
              <groupfilter function='member' level='[none:ticker:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[sum:scores:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[avg:scores:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[avg:scores:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[sum:scores:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[avg:scores:qk]' />
              <text column='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[avg:scores:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1025' />
                <format attr='maxwidth' value='1025' />
                <format attr='minheight' value='1020' />
                <format attr='maxheight' value='1020' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]</rows>
        <cols>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[sum:scores:qk]</cols>
      </table>
      <simple-id uuid='{AE1C8451-1702-42C3-8077-98D0E45F9AF9}' />
    </worksheet>
    <worksheet name='Reddit Posts and Scores'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (top100_posts)' name='federated.1wrpk9s1t052ka1asjp4u1od9afw' />
          </datasources>
          <datasource-dependencies datasource='federated.1wrpk9s1t052ka1asjp4u1od9afw'>
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='MDY' name='[md:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[scores]' derivation='None' name='[none:scores:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ticker]' derivation='None' name='[none:ticker:nk]' pivot='key' type='nominal' />
            <column caption='Scores' datatype='real' name='[scores]' role='measure' type='quantitative' />
            <column-instance column='[scores]' derivation='Sum' name='[sum:scores:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker' datatype='string' name='[ticker]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]'>
            <groupfilter function='level-members' level='[none:ticker:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]' value='44' />
            <format attr='width' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[dy:date:ok]' value='152' />
            <format attr='width' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[attr:title:nk]' value='648' />
            <format attr='width' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[md:date:ok]' value='152' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[sum:scores:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[sum:scores:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk] / ([federated.1wrpk9s1t052ka1asjp4u1od9afw].[md:date:ok] / ([federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:scores:ok] / [federated.1wrpk9s1t052ka1asjp4u1od9afw].[attr:title:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{29AA1339-DF12-4694-931D-2C052119C0FD}' />
    </worksheet>
    <worksheet name='Scores Sumstats'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (sumstats_scores)' name='federated.1pj47ap0t7zj7g19rirg5064mhma' />
          </datasources>
          <datasource-dependencies datasource='federated.1pj47ap0t7zj7g19rirg5064mhma'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='real' name='[Social Media Scores]' role='measure' type='quantitative' />
            <column datatype='real' name='[Survey Scores]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Social Media Scores]' derivation='Sum' name='[sum:Social Media Scores:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Survey Scores]' derivation='Sum' name='[sum:Survey Scores:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1pj47ap0t7zj7g19rirg5064mhma].[sum:Survey Scores:ok]' value='112' />
            <format attr='width' field='[federated.1pj47ap0t7zj7g19rirg5064mhma].[sum:Social Media Scores:ok]' value='136' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1pj47ap0t7zj7g19rirg5064mhma].[none:F1:nk] / ([federated.1pj47ap0t7zj7g19rirg5064mhma].[sum:Social Media Scores:ok] / [federated.1pj47ap0t7zj7g19rirg5064mhma].[sum:Survey Scores:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{BD7D588E-F418-4A2E-A35F-122C6F81BFE0}' />
    </worksheet>
    <worksheet name='Sentiment vs. FF3F vs. FF+S'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (predictions)' name='federated.06ypuj209ru7nx1gmuywm1foem0c' />
          </datasources>
          <datasource-dependencies datasource='federated.06ypuj209ru7nx1gmuywm1foem0c'>
            <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
            <column datatype='real' name='[FFS]' role='measure' type='quantitative' />
            <column datatype='real' name='[FF]' role='measure' type='quantitative' />
            <column datatype='real' name='[S]' role='measure' type='quantitative' />
            <column datatype='string' name='[Stock]' role='dimension' type='nominal' />
            <column-instance column='[Actual]' derivation='None' name='[none:Actual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FF]' derivation='None' name='[none:FF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Stock]' derivation='None' name='[none:Stock:nk]' pivot='key' type='nominal' />
            <column-instance column='[FFS]' derivation='Sum' name='[sum:FFS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[S]' derivation='Sum' name='[sum:S:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ypuj209ru7nx1gmuywm1foem0c].[none:Stock:nk]'>
            <groupfilter function='level-members' level='[none:Stock:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06ypuj209ru7nx1gmuywm1foem0c].[none:Stock:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.06ypuj209ru7nx1gmuywm1foem0c].[sum:S:qk]' value='47' />
            <format attr='height' field='[federated.06ypuj209ru7nx1gmuywm1foem0c].[none:FF:qk]' value='47' />
            <format attr='height' field='[federated.06ypuj209ru7nx1gmuywm1foem0c].[sum:FFS:qk]' value='47' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='371' />
                <format attr='maxwidth' value='371' />
                <format attr='minheight' value='470' />
                <format attr='maxheight' value='470' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.06ypuj209ru7nx1gmuywm1foem0c].[none:FF:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.06ypuj209ru7nx1gmuywm1foem0c].[sum:FFS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.06ypuj209ru7nx1gmuywm1foem0c].[sum:S:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.06ypuj209ru7nx1gmuywm1foem0c].[none:Actual:qk]</rows>
        <cols>([federated.06ypuj209ru7nx1gmuywm1foem0c].[sum:S:qk] + ([federated.06ypuj209ru7nx1gmuywm1foem0c].[none:FF:qk] + [federated.06ypuj209ru7nx1gmuywm1foem0c].[sum:FFS:qk]))</cols>
      </table>
      <simple-id uuid='{8C2C831E-CB66-4C54-B419-6C212A846473}' />
    </worksheet>
    <worksheet name='Social Media vs. Survey Scores'>
      <table>
        <view>
          <datasources>
            <datasource caption='social media_vs_survey' name='federated.116dbzh07idaaw1ekuqy0134lsk6' />
          </datasources>
          <datasource-dependencies datasource='federated.116dbzh07idaaw1ekuqy0134lsk6'>
            <column caption='Date' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='real' name='[Social Media Scores]' role='measure' type='quantitative' />
            <column datatype='real' name='[Survey Scores]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Social Media Scores]' derivation='Sum' name='[sum:Social Media Scores:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survey Scores]' derivation='Sum' name='[sum:Survey Scores:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.116dbzh07idaaw1ekuqy0134lsk6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.116dbzh07idaaw1ekuqy0134lsk6].[sum:Social Media Scores:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.116dbzh07idaaw1ekuqy0134lsk6].[sum:Survey Scores:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.116dbzh07idaaw1ekuqy0134lsk6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.116dbzh07idaaw1ekuqy0134lsk6].[none:F1:nk]' value='81' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.116dbzh07idaaw1ekuqy0134lsk6].[none:F1:nk]' value='17' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.116dbzh07idaaw1ekuqy0134lsk6].[none:F1:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.116dbzh07idaaw1ekuqy0134lsk6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.116dbzh07idaaw1ekuqy0134lsk6].[Multiple Values]</rows>
        <cols>[federated.116dbzh07idaaw1ekuqy0134lsk6].[none:F1:nk]</cols>
      </table>
      <simple-id uuid='{C8C236B3-DFC0-4E06-B672-BF6076E4867E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Social Media Sentiment Analysis' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>FIN 6368 - Individual Project: Social Media Sentiment Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='text-align' id='story-description_9' value='left' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='462' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='15' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='4576' id='16' type-v2='title' w='99064' x='468' y='893'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93638' id='7' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='5469'>
              <zone h='93638' id='1' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='5469'>
                <zone fixed-size='79' h='8817' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99064' x='468' y='5469' />
                <zone h='84821' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99064' x='468' y='14286'>
                  <flipboard active-id='11' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='Introduction' captured-sheet='' id='4' />
                      <story-point caption='Collecting and Extracting Sentiment Data from Reddit API' captured-sheet='Reddit Posts and Scores' id='5' />
                      <story-point caption='Average Sentiment Scores by Stock' captured-sheet='Average Score by Stock' id='7' />
                      <story-point caption='Social Media Sentiment vs. AAII Survey Sentiment' captured-sheet='Social Media vs. Survey Scores' id='8' />
                      <story-point caption='Regression Results' captured-sheet='' id='9' />
                      <story-point caption='Prediction Results' captured-sheet='Sentiment vs. FF3F vs. FF+S' id='10' />
                      <story-point caption='Conclusion' captured-sheet='' id='11' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='17116' hidden='true' id='9' story-point-id='4' type-v2='text' w='98031' x='1280' y='12344'>
          <formatted-text>
            <run bold='true'>Introduction</run>
            <run>Æ&#10;</run>
            <run fontsize='11'>Social media is a valuable source of big data and provides a prime opportunity for many data mining methods. In this project, my program will only focus on sentiment mining from text using a natural language processing (NLP) model. The research questions this project will attempt to answer are the following:</run>
            <run>Æ&#10;</run>
            <run fontsize='11'>-How accurately can a social media-based model rate market sentiment? </run>
            <run>Æ&#10;</run>
            <run fontsize='11'>-Can sentiment mining data be used to predict stock returns? </run>
            <run>Æ&#10;</run>
            <run fontsize='11'>-And lastly, how does sentiment analysis compare with other models? </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='25778' hidden='true' id='10' story-point-id='4' type-v2='text' w='97938' x='1250' y='31111'>
          <formatted-text>
            <run bold='true' fontalignment='0'>Procedures</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>The program written to answer these research questions accomplishes various tasks. Here are the steps that it follows:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>1) Collect Social Media Data from Reddit API related to individual stocks.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>2) Process data through the RoBERTa (NLP) model to extract sentiment probabilities.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>3) Calculate Sentiment Score/Index based on probabilities.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>4) Compare Social Media Sentiment with AAII&apos;s Sentiment Survey to test how accurately Social Media Sentiment captures Market Sentiment</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>5) Gather Stock Return and Fama-French Factor data</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>6) Run regressions with Sentiment Scores on Stock Returns and compare to Fama-French 3 Factor model.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>7) Predict Stock Return using Sentiment Scores and compare with Fama-French.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>In addition to these steps, there will be summary statistics and visualizations produced to help draw conclusions from the results.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='62388' hidden='true' id='11' story-point-id='5' type-v2='text' w='19895' x='68929' y='15848'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Output from Program</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>This table shows the  output from the program&apos;s API scraper and NLP model. As shown, individual Reddit posts, their date of submission, and their associated scores are grouped by stock symbol, forming a panel data table.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontsize='11'>Sentiment Score Calculation</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>The RoBERTa model from Huggingface is trained on over 100 million social media posts to extract sentiment probabilities. The three labels for a post&apos;s sentiment is Positive, Negative, and Neutral. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>To calculate a score, a weighted average is taken using the probabilities as weights and the labels  as values. In this project, positive sentiment is labeled as 1, negative sentiment is labeled as -1, and neutral sentiment is labeled as 0.  The weighted average results in a score from -1 to +1, which is used as an index for sentiment.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='11496' hidden='true' id='12' story-point-id='4' type-v2='text' w='98011' x='1170' y='58371'>
          <formatted-text>
            <run bold='true' fontalignment='0'>Stock Data Selection</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>This project uses the top 100 S&amp;P 500 stocks to test the relationship between social media sentiment and stock returns. Although a larger sample size is preferable, there are limitations related to data collection and processing time that make increasing sample size very challenging. Regardless, the program is written to process any sample size, so further data collection and processing is supported. Data is collected between 2020-01-01 and 2023-12-31</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='33778' hidden='true' id='13' story-point-id='7' type-v2='text' w='16313' x='71563' y='17889'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Sentiment Scores by Stock</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>The average scores by stock reveals the average sentiment rating for the period 2020-01-01 to 2023-12-31. As shown, the most postively rated stocks are: PGR, REGN,and ADI. The most negatively rated stocks are:  T, LOW, and COST. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>No stock was collectively viewed as very positive or very negative, with all the average scores falling between -0.28 and 0.27</run>
            <run fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='46875' hidden='true' id='17' story-point-id='9' type-v2='text' w='31714' x='293' y='37500'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Sentiment Regression Results                                  </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Dep. Variable:     training_data[&quot;excess_return&quot;]   R-squared:          0.008</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Model:                                        OLS   Adj. R-squared:     0.008</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Method:                             Least Squares   F-statistic:        23.99</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Date:                            Sun, 03 Mar 2024   Prob (F-statistic): 1.02e-06</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Time:                                    11:33:21   Log-Likelihood:    -10670.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>No. Observations:                            2925   AIC:                2.134e+04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Df Residuals:                                2923   BIC:                2.136e+04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Df Model:                                       1                                         </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Covariance Type:                        nonrobust                                         </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>                 coef    std err          t      P&gt;|t|      [0.025      0.975]</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>------------------------------------------------------------------------------</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Intercept      0.9304      0.178      5.220      0.000       0.581       1.280</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>scores         0.7804      0.159      4.898      0.000       0.468       1.093</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Omnibus:                      161.509   Durbin-Watson:                   2.032</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Prob(Omnibus):                  0.000   Jarque-Bera (JB):              599.546</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Skew:                           0.122   Prob(JB):                    6.46e-131</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Kurtosis:                       5.204   Cond. No.                         1.34</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Notes:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>----------------------------</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>ANOVA result:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>              df         sum_sq      mean_sq          F    PR(&gt;F)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>scores       1.0    2071.429620  2071.429620  23.986265  0.000001</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Residual  2923.0  252427.324478    86.358989        NaN       NaN</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='55804' hidden='true' id='18' story-point-id='9' type-v2='text' w='32066' x='32183' y='37388'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Fama-French Regression Results                                  </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>================================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Dep. Variable:     training_data[&quot;excess_return&quot;]   R-squared:          0.363</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Model:                                        OLS   Adj. R-squared:     0.362</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Method:                             Least Squares   F-statistic:        553.9</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Date:                            Sun, 03 Mar 2024   Prob (F-statistic): 5.46e-285</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Time:                                    11:33:21   Log-Likelihood:    -10023.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>No. Observations:                            2925   AIC:                2.005e+04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Df Residuals:                                2921   BIC:                2.008e+04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Df Model:                                       3                                         </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Covariance Type:                        nonrobust                                         </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>                 coef    std err          t      P&gt;|t|      [0.025      0.975]</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>------------------------------------------------------------------------------</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Intercept      0.5044      0.139      3.619      0.000       0.231       0.778</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>MKT            0.9089      0.023     39.808      0.000       0.864       0.954</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>SMB           -0.1664      0.048     -3.452      0.001      -0.261      -0.072</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>HML            0.0485      0.026      1.841      0.066      -0.003       0.100</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Omnibus:                      273.195   Durbin-Watson:                   1.936</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1536.640</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Skew:                           0.245   Prob(JB):                         0.00</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Kurtosis:                       6.517   Cond. No.                         6.49</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Notes:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>----------------------------</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>ANOVA result:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>              df         sum_sq       mean_sq            F         PR(&gt;F)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>MKT          1.0   91394.777363  91394.777363  1645.773189  8.704451e-286</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>SMB          1.0     703.769906    703.769906    12.672996   3.768898e-04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>HML          1.0     188.216491    188.216491     3.389271   6.572332e-02</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Residual  2921.0  162211.990338     55.533033          NaN            NaN</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='28125' hidden='true' id='19' story-point-id='8' type-v2='text' w='15799' x='53248' y='14174'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Æ                    </run>
            <run bold='true' fontalignment='0' fontsize='11' underline='true'>Summary Statistics</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontsize='11'>Æ                     </run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>Social Media        Survey </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>count        </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>48.000000           48.000000</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>mean         </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>0.072803             0.035216</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>std             </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>0.058977              0.170795</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>min           </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>-0.065004            -0.279714</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>25%          </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>0.042717            -0.114659</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>50%          </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>0.083258              0.055798</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>75%          </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>0.105963              0.165674</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>max           </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>0.208437              0.335110</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>skews    </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>-0.275508            -0.167724</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='11'>kurts        </run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>0.278962            -1.093962</run>
            <run fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='36496' hidden='true' id='20' story-point-id='8' type-v2='text' w='46401' x='53189' y='42522'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Survey Sentiment Calculation and Data Processing</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>The survey data comes from the American Association of Individual Investors (AAII) Sentiment Survey which is conducted on a weekly basis. Members of AAII simply provide their opinion on whether the market is Bullish, Neutral, or Bearish and the percentage of voters in each respective category is recorded. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>     Similar to how the social media sentiment score was calculated, the survey sentiment score associates -1  with a negative outlook, 0 with neutral, and +1 with positive. Using the survey percentages as weights, the weighted average is calculated and used as an index for that period.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>     In order to make the social media and survey sentiment scores comparable, several adjustments needed to be made to the datasets. First and foremost, the survey sentiment is in reference to the entire stock market. In the social media sentiment dataset, the dataframe is formatted as panel data (by stock and date). In order to convert the stock specific panel data into market data, I had to weight the scores of each stock by market cap percentage (market cap/total market cap). From that point, I iterated through the dataframe and calculated the weighted sum of scores for each month, resulting in a dataframe with 48 entries (one per month). Since the survey data has entries on a weekly basis, simply taking the mean score for each month was sufficient in processing the raw data.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='19196' hidden='true' id='21' story-point-id='8' type-v2='text' w='46226' x='53189' y='79576'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Social Media vs. Survey Sentiment</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>When comparing summary statistics between social media sentiment and survey sentiment, there are a few key similarities and differences worth highlighting. Firstly, both sentiment scores tend to center around neutral market conditions (means are close to 0) from 2020-01-01 to 2023-12-31. The survey sentiment is notably more volatile than the social media sentiment (standard deviation of 0.17 vs 0.06) and has a much more dynamic range (over twice the range of social media sentiment). Additionally, the survey sentiment appears to be exhibiting a cyclical pattern in the time-series plot. In contrast, the social media sentiment seems to have no pattern and more resembles a random walk.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='58482' hidden='true' id='22' story-point-id='9' type-v2='text' w='31539' x='64658' y='37388'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Fama-French + Sentiment Regression Results                                  </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Dep. Variable:     training_data[&quot;excess_return&quot;]   R-squared:          0.366</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Model:                                        OLS   Adj. R-squared:     0.365</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Method:                             Least Squares   F-statistic:        421.8</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Date:                            Sun, 03 Mar 2024   Prob (F-statistic): 3.49e-287</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Time:                                    11:33:21   Log-Likelihood:    -10015.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>No. Observations:                            2925   AIC:                2.004e+04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Df Residuals:                                2920   BIC:                2.007e+04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Df Model:                                       4                                         </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Covariance Type:                        nonrobust                                         </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>                 coef    std err          t      P&gt;|t|      [0.025      0.975]</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>------------------------------------------------------------------------------</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Intercept      0.3554      0.144      2.473      0.013       0.074       0.637</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>MKT            0.9052      0.023     39.726      0.000       0.861       0.950</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>SMB           -0.1718      0.048     -3.571      0.000      -0.266      -0.077</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>HML            0.0433      0.026      1.647      0.100      -0.008       0.095</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>scores         0.5215      0.128      4.081      0.000       0.271       0.772</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Omnibus:                      266.260   Durbin-Watson:                   1.937</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1451.318</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Skew:                           0.242   Prob(JB):                         0.00</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Kurtosis:                       6.417   Cond. No.                         7.18</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>==============================================================================</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Notes:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>----------------------------</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>ANOVA result:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>              df         sum_sq       mean_sq            F         PR(&gt;F)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>MKT          1.0   91394.777363  91394.777363  1654.593694  5.420681e-287</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>SMB          1.0     703.769906    703.769906    12.740917   3.635061e-04</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>HML          1.0     188.216491    188.216491     3.407436   6.500439e-02</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>scores       1.0     919.975986    919.975986    16.655071   4.603171e-05</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Courier New' fontsize='8'>Residual  2920.0  161292.014352     55.236991          NaN            NaN</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='23549' hidden='true' id='23' story-point-id='9' type-v2='text' w='31422' x='410' y='12723'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Regression Analysis</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>In this section, we will be running the following 3 regressions: </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>1) Social media sentiment scores on Excess returns</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>2) Fama-French 3 factor model</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>3) Fama-French 3 factor model + Sentiment scores</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>The regression below were calculated using a training data subset, which uses dates from 2020-01-01 to 2022-12-31.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='23549' hidden='true' id='24' story-point-id='9' type-v2='text' w='64073' x='32124' y='12723'>
          <formatted-text>
            <run fontalignment='0' fontsize='11'>As shown below, all the regressions have significant F-statistics. Starting with the Sentiment Score Regression (left), scores use the </run>
            <run fontalignment='0' fontcolor='#4e79a7' fontsize='11'>monthly sum</run>
            <run fontalignment='0' fontsize='11'> of sentiment scores of all the posts in that month. The sum is used over the mean in this scenario to ensure that months with </run>
            <run fontalignment='0' fontcolor='#4e79a7' fontsize='11'>more posts </run>
            <run fontalignment='0' fontsize='11'>are</run>
            <run fontalignment='0' fontcolor='#4e79a7' fontsize='11'> more heavily weighted</run>
            <run fontalignment='0' fontsize='11'> than months with less posts. As a result, the &quot;scores&quot; coefficient can be interpreted as such: for each post with a perfectly positive sentiment score (1), the stock monthly return improves by 0.78%. Although the coefficient is significant, the R-squared is very weak (0.008), indicating </run>
            <run fontalignment='0' fontcolor='#4e79a7' fontsize='11'>poor explanatory power</run>
            <run fontalignment='0' fontsize='11'>.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>The Fama-French Regression (middle) is used as a benchmark for measuring the marginal effect of the sentiment regression. Looking at the Fama-French + Sentiment Regression (right), the addition of the &quot;scores&quot; factor did little to improve Fama-French&apos;s explanatory power. R-squared only increased by 0.002 and AIC and BIC showed small improvements as well.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='20871' hidden='true' id='25' story-point-id='10' type-v2='text' w='17847' x='70099' y='15067'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Prediction using Regression Results</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>Using the Regression estimates, we can project stock returns during the testing period (2023-01-01 to 2023-12-31). By plotting predicted return (x axis) against actual returns (y axis), we can reveal how well the predicted returns match up with the actual returns.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='19978' hidden='true' id='26' story-point-id='10' type-v2='text' w='18724' x='5734' y='74107'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Sentiment Scores</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>In this scatterplot, we can observe how many of the dots follow a nearly vertical column. This shows that there is </run>
            <run fontalignment='0' fontcolor='#4e79a7' fontsize='11'>nearly no correlation</run>
            <run fontalignment='0' fontsize='11'> between predicted returns and actual returns, meaning that sentiment score alone is not enough information to effectively project stock returns</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='23996' hidden='true' id='27' story-point-id='10' type-v2='text' w='19017' x='27501' y='74107'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Fama-French 3-Factor Model</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>As expected, the predicted returns show a </run>
            <run fontalignment='0' fontcolor='#4e79a7' fontsize='11'>moderate correlation</run>
            <run fontalignment='0' fontsize='11'> with actual returns. The vertical columns of observations are a result of using panel data in running the regression. In other words, all the stocks in the data use the same monthly Fama-French factors as input for predicted returns (x-axis), but each have their own unique returns (y-axis).</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='21875' hidden='true' id='28' story-point-id='10' type-v2='text' w='19075' x='48976' y='74330'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Fama-French + Sentiment Scores</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>Finally, this scatterplot is the result of combining Fama-French Factors and Sentiment Scores. By comparing the trendline to that of the other two scatterplots, we find that the correlation between predicted and actual returns in this chart is </run>
            <run fontalignment='0' fontcolor='#4e79a7' fontsize='11'>slightly higher than Fama-French&apos;s</run>
            <run fontalignment='0' fontsize='11'>. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='20323' hidden='true' id='29' story-point-id='10' type-v2='text' w='18039' x='70048' y='37067'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='11'>Prediction Errors (Sum of Squared Errors)</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>Sentiment:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>64682.92475146284</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>Fama-French:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>49815.91980298406</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>Fama-French + Sentiment:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>49383.304495826225</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='86719' id='30' story-point-id='11' type-v2='text' w='64482' x='819' y='12723'>
          <formatted-text>
            <run bold='true' fontalignment='0'>Conclusion</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>To conclude this project, we will revisit the initial research questions:</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#4e79a7' fontsize='11'>How accurately can a social media-based model rate market sentiment?</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>When comparing the social media-based scores to the AAII survey sentiment, there is little similarity between the two distributions. As a result, social-media sentiment does not seem to be an effective proxy for market sentiment. However, in order to test this relationship further, it would be ideal to use additional metrics for market sentiment other than the survey data from AAII. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#4e79a7' fontsize='11'>Can sentiment mining data be used to predict stock returns?</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>Looking at the regression results, regressing sentiment scores on stock returns outputs a significant F-score and coefficient estimates. Although the relationship between social media sentiment and stock returns is significant, the explanatory power of sentiment is very poor. In other terms, sentiment mining data </run>
            <run fontalignment='0' fontsize='11' italic='true'>alone </run>
            <run fontalignment='0' fontsize='11'> is not sufficient in predicting stock returns. We can see this in the prediction results as well, as the sentiment score prediction error is the highest of the three models.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#4e79a7' fontsize='11'>How does sentiment analysis compare with other models?</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>When testing the sentiment model as a supplement to the Fama-French 3 Factor model, there is a slight marginal improvement to Fama-French&apos;s goodness of fit and prediction results. Specifically with the prediction error, adding sentiment scores to Fama-French reduced the sum of squared errors by about 1%. This suggests that social media sentiment plays a role in stock return, but not nearly to the extent that a Fama French factor does.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>Overall, the evidence from this project shows that social media sentiment is a poor proxy of market sentiment and a poor predictor for stock returns. However, there is a minute, yet statistically significant effect of sentiment scores on stock returns. As expected, a positive sentiment score leads to positive movement in stock returns.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='0'>Challenges</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='11'>This project posed a lot of challenges-- most of which are related to data quality. The most limiting challenge with this project is the lack of data sources. Originally, I planned on pulling data from Twitter and Reddit, but  there have been changes to Twitter&apos;s policy that vastly limit the API&apos;s accessibility. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>Additionally, there are limits to the Reddit API (and PRAW) search function, which make it difficult to collect large amounts of data that is useful for extracting stock sentiment. For instance, searching for shorter stock tickers, like Target (T) or CitiGroup (C), would return many posts that were irrelevant to the stock/firm. I found that limiting the search to finance-related subreddits (i.e. r/stocks, r/investing, r/StockMarket) and adding a $ sign in front of each ticker helped to mitigate this issue.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='11'>Another limitation to the Reddit API search engine is that you can not add a date-specific time filter to the search query. My solution to this was to screen all the posts returned by the search; keeping posts that fell in my desired date range and discarding the others. The issue with this approach is that the program has to download all the posts associated with the query which takes a considerable amount of time (about 1-2 minutes per stock ticker). Despite this bottleneck, the program is designed to analyze any size dataset, so it is possible to download additional data in the future.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{B5988A49-6B36-4747-A0F9-D09534EAB354}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='dashboard' maximized='true' name='Social Media Sentiment Analysis'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{552B4547-C33B-46F2-BD80-5AFA7C4313A2}' />
    </window>
    <window class='worksheet' name='Reddit Posts and Scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[sum:scores:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[attr:date:ok]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[attr:scores:ok]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[attr:title:nk]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[md:date:ok]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:scores:ok]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:title:nk]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:url:nk]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[sum:scores:qk]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6153AE75-8355-4044-AE93-D71B24F945AA}' />
    </window>
    <window class='worksheet' name='Average Score by Stock'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1wrpk9s1t052ka1asjp4u1od9afw].[avg:scores:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[avg:scores:qk]</field>
            <field>[federated.1wrpk9s1t052ka1asjp4u1od9afw].[none:ticker:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{234FF04C-0783-4DA9-8C3D-584AD2CA152E}' />
    </window>
    <window class='worksheet' name='Social Media vs. Survey Scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.116dbzh07idaaw1ekuqy0134lsk6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.116dbzh07idaaw1ekuqy0134lsk6].[:Measure Names]</field>
            <field>[federated.116dbzh07idaaw1ekuqy0134lsk6].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE44A67B-516F-4928-9F45-3FA4B8E1A2B7}' />
    </window>
    <window class='worksheet' name='Scores Sumstats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pj47ap0t7zj7g19rirg5064mhma].[none:F1:nk]</field>
            <field>[federated.1pj47ap0t7zj7g19rirg5064mhma].[sum:Market Scores:ok]</field>
            <field>[federated.1pj47ap0t7zj7g19rirg5064mhma].[sum:Social Media Scores:ok]</field>
            <field>[federated.1pj47ap0t7zj7g19rirg5064mhma].[sum:Survey Scores:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{229DE307-D2F0-49CA-A679-426124407756}' />
    </window>
    <window class='worksheet' name='Sentiment vs. FF3F vs. FF+S'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.06ypuj209ru7nx1gmuywm1foem0c].[none:Stock:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ypuj209ru7nx1gmuywm1foem0c].[none:Stock:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8494D8F6-98F4-47BC-813E-E4818D5DD758}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Score by Stock' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Reddit Posts and Scores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scores Sumstats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sentiment vs. FF3F vs. FF+S' width='192'>
      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
      H4+kCcB84f8HucQwjlZx3eQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Social Media Sentiment Analysis' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Social Media vs. Survey Scores' width='192'>
      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
      CgElAVGxp+1oAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
